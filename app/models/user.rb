# == Schema Information
#
# Table name: users
#
#  id              :integer          not null, primary key
#  name            :string(255)
#  email           :string(255)
#  created_at      :datetime         not null
#  updated_at      :datetime         not null
#  password_digest :string(255)
#

class User < ActiveRecord::Base
  #password and password_confirmation are not stored in the db but in virtual variables
  attr_accessible :email, :name, :password, :password_confirmation
  has_secure_password

  #not all db support casesensitive indexs
  #index also fixes an efficiency prob with find_by_email
  #before_save { |user| user.email = email.downcase }
  before_save { self.email.downcase! }

  validates :name, presence:  true, length: { maximum: 50 }

  VALID_EMAIL_REGEX = /\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i
  validates :email, presence: true,
                    format: { with: VALID_EMAIL_REGEX },
                    #uniqueness: true
                    uniqueness: { case_sensitive: false}

  validates :password, presence: true,
                       length: { minimum: 6 }
  #password_confirmation generated by rails API method validates_confirmation_of :password
  #executed because of has_secure_password method call
  validates :password_confirmation, presence: true
end
